						 
						 
											PLSQL ASSIGNMENTS
									
1.3 DECLARE
	empdetails EMPLOYEE %ROWTYPE;
	BEGIN
	SELECT * INTO empdetails
	FROM EMPLOYEE
	WHERE EMPNO=7788;
	DBMS_OUTPUT.PUT_LINE('EMPNO'|| empdetails.EMPNO);
	DBMS_OUTPUT.PUT_LINE('EMPNAME'|| empdetails.ENAME);
	DBMS_OUTPUT.PUT_LINE('SALARY'|| empdetails.SAL);
	DBMS_OUTPUT.PUT_LINE('HIREDATE'|| empdetails.HIREDATE);
	END;

1.4 
	DECLARE
	empdetails DEPARTMENT_MASTER %ROWTYPE;
	BEGIN
	SELECT * INTO empdetails
	FROM DEPARTMENT_MASTER
	WHERE DEPT_CODE=10;
	DBMS_OUTPUT.PUT_LINE('DCODE'|| empdetails.DEPT_CODE);
	DBMS_OUTPUT.PUT_LINE('DEPTNAME'|| empdetails.DEPT_NAME);
	END;
	 
	
1.5 DECLARE
   empname EMPLOYEE.ENAME%TYPE;
   empno EMPLOYEE.EMPNO%TYPE;
   salary EMPLOYEE.SAL%TYPE;
   hiredate EMPLOYEE.HIREDATE%TYPE;
   dname DEPARTMENT_MASTER.DEPT_NAME%TYPE;

 BEGIN
  SELECT EMPNO,SAL,HIREDATE,DEPT_NAME INTO empno,salary,hiredate,dname
		 FROM EMPLOYEE emp,DEPARTMENT_MASTER d
		 
		 where ENAME='&ENAME' AND emp.DEPTNO=d.DEPT_CODE;
		 
	DBMS_OUTPUT.PUT_LINE
	('EMPLOYEENAME' || empname || 'EMPNO' || empno || 'SALARY' || salary || 'HIREDATE' || hiredate ||
      	'DEPARTMENTNAME' || dname);
  END;
  
1.6 DECLARE
     recstaff STAFF_MASTER%ROWTYPE; 
	CURSOR cname is SELECT * FROM STAFF_MASTER WHERE DEPT_CODE='&DEPT_CODE';
		
	 BEGIN
	 IF cname%ISOPEN THEN
	 null;
	 ELSE
	  OPEN cname;
     END IF;
		
		FETCH cname INTO recstaff;
		WHILE cname%FOUND
		LOOP
		DBMS_OUTPUT.PUT_LINE('CODE :'|| recstaff.STAFF_CODE);
	    DBMS_OUTPUT.PUT_LINE('NAME :'|| recstaff.STAFF_NAME);
	    DBMS_OUTPUT.PUT_LINE('SALARY :'|| recstaff.STAFF_SAL);
	    DBMS_OUTPUT.PUT_LINE('DEPT :'|| recstaff.DEPT_CODE);
  
		FETCH cname INTO recstaff;
	   END LOOP;
	   CLOSE cname;
	   END;
	   
1.7  DECLARE
     recstaff STAFF_MASTER%ROWTYPE; 
	CURSOR cname is SELECT * FROM STAFF_MASTER WHERE DEPT_CODE='&DEPT_CODE';
		
	 BEGIN
	 IF cname%ISOPEN THEN
	 null;
	 ELSE
	  OPEN cname;
     END IF;
		
		FETCH cname INTO recstaff;
		WHILE cname%FOUND
		LOOP               
	     IF recstaff.STAFF_SAL*1.3<(recstaff.STAFF_SAL+5000) THEN
		      UPDATE STAFF_MASTER
			  SET STAFF_SAL=STAFF_SAL*1.3;
			  
		ELSE 
		      UPDATE STAFF_MASTER
			  SET STAFF_SAL=STAFF_SAL+5000;
	  END IF;
	  FETCH cname INTO recstaff;
	   END LOOP;
	   CLOSE cname;
	   END;

1.8  DECLARE 
		SCODE STUDENT_MASTER.STUDENT_CODE%TYPE;
	    SNAME STUDENT_MASTER.STUDENT_NAME%TYPE;
		DCODE STUDENT_MASTER.DEPT_CODE%TYPE;
		S1 STUDENT_MARKS.SUBJECT1%TYPE;
		S2 STUDENT_MARKS.SUBJECT2%TYPE;
		S3 STUDENT_MARKS.SUBJECT3%TYPE;
		GRADE STUDENT_MASTER.STUDENT_NAME%TYPE;
		TOTAL STUDENT_MARKS.SUBJECT1%TYPE;
		PERCENT STUDENT_MARKS.SUBJECT1%TYPE;
		 CURSOR CNAME IS SELECT S.STUDENT_CODE, S.STUDENT_NAME, S.DEPT_CODE,
		    SM.SUBJECT1, SM.SUBJECT2, SM.SUBJECT3
			  FROM STUDENT_MASTER S, STUDENT_MARKS SM
			   WHERE SM.STUDENT_CODE=S.STUDENT_CODE AND S.DEPT_CODE=&DCODE;
	  BEGIN
	  IF CNAME%ISOPEN THEN
	 null;
	 ELSE
	  OPEN CNAME;
     END IF;
	 FETCH CNAME INTO SCODE,SNAME,DCODE,S1,S2,S3;
	 WHILE CNAME%FOUND
	 LOOP
	   IF S1>=60 AND S2>=60 AND S3>=60 THEN
	   TOTAL:=S1+S2+S3; 
	   PERCENT:= ROUND((S1+S2+S3)/3);
		IF PERCENT>=80
		  THEN GRADE:= 'A';
		 ELSIF PERCENT>=70 AND PERCENT<80		 
		 THEN GRADE:= 'B';
		 ELSIF PERCENT>=60 AND PERCENT<70
			THEN GRADE:='C';
		 ELSE GRADE:='D';
			END IF;
			
			 DBMS_OUTPUT.PUT_LINE('STUDENTCODE'|| SCODE);
		 DBMS_OUTPUT.PUT_LINE('STUDENTNAME'||SNAME);
		 DBMS_OUTPUT.PUT_LINE('DCODE' || DCODE);
		 DBMS_OUTPUT.PUT_LINE('SUBJECT1MARKS' || S1);
		 DBMS_OUTPUT.PUT_LINE('SUBJECT2MARKS'|| S2);
		 DBMS_OUTPUT.PUT_LINE('SUBJECT3MARKS'|| S3);
		 DBMS_OUTPUT.PUT_LINE('TOTALAMRKS' || TOTAL);
		 DBMS_OUTPUT.PUT_LINE('PERCENT' || PERCENT);
		 
		 ELSE GRADE:='FAIL';
		 
		 END IF;
		 FETCH CNAME INTO SCODE,SNAME,DCODE,S1,S2,S3;
		 END LOOP;
		 CLOSE CNAME;
		END;

1.9 DECLARE
    CURSOR cname(DNO NUMBER) IS SELECT * FROM STAFF_MASTER WHERE DEPT_CODE=DNO;
	BEGIN
	 FOR REC IN cname(&DNO)
	    LOOP
		     DBMS_OUTPUT.PUT_LINE('STAFF CODE : '||REC.STAFF_CODE);
			  DBMS_OUTPUT.PUT_LINE('STAFF NAME : '|| REC.STAFF_NAME);
			   DBMS_OUTPUT.PUT_LINE('SALARY' || REC.STAFF_SAL);
		END LOOP;
	END;
	